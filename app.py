import os
import json
import base64
import re
import email
from datetime import datetime, timedelta
from flask import Flask, jsonify
from telegram import Bot
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build

app = Flask(__name__)

# Bi·∫øn m√¥i tr∆∞·ªùng
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
TOKEN_JSON = os.getenv("TOKEN_JSON")

# Gmail API Scope
SCOPES = ['https://www.googleapis.com/auth/gmail.readonly']

# T·∫°o credentials t·ª´ token JSON
token_data = json.loads(TOKEN_JSON)
creds = Credentials.from_authorized_user_info(token_data, SCOPES)

# T·∫°o Gmail API service
service = build('gmail', 'v1', credentials=creds)

@app.route('/check_mail', methods=['GET'])
def check_mail():
    results = service.users().messages().list(userId='me', labelIds=['INBOX'], q='from:netflix').execute()
    messages = results.get('messages', [])

    if not messages:
        return jsonify({'message': '‚ùå Kh√¥ng t√¨m th·∫•y email n√†o t·ª´ Netflix.'}), 200

    msg = service.users().messages().get(userId='me', id=messages[0]['id'], format='raw').execute()
    raw_data = base64.urlsafe_b64decode(msg['raw'].encode("UTF-8"))
    parsed_email = email.message_from_bytes(raw_data)

    # L·∫•y th√¥ng tin ng∆∞·ªùi g·ª≠i (email ng∆∞·ªùi g·ª≠i)
    from_email = parsed_email['From']
    name_match = re.search(r'\"([^\"]+)\"', from_email)
    name = name_match.group(1) if name_match else from_email.split('<')[0]

    # L·∫•y th·ªùi gian email ƒë∆∞·ª£c g·ª≠i
    email_time = datetime.utcfromtimestamp(int(msg['internalDate']) / 1000)
    email_time_str = email_time.strftime('%H:%M:%S')

    # L·∫•y body email v√† t√¨m link Netflix
    body = ""
    if parsed_email.is_multipart():
        for part in parsed_email.walk():
            if part.get_content_type() == "text/html":
                body = part.get_payload(decode=True).decode()
                break
    else:
        body = parsed_email.get_payload(decode=True).decode()

    links = re.findall(r'https?://[^\s"\']+', body)
    target_link = next((l for l in links if "netflix.com" in l and ("code" in l or "verify" in l)), None)

    if target_link:
        # T√≠nh hi·ªáu l·ª±c (15 ph√∫t)
        expiration_time = email_time + timedelta(minutes=15)
        expiration_str = expiration_time.strftime('%H:%M:%S')

        message = (f"üìß **Email t·ª´**: {name}\n"
                   f"üîó **Link nh·∫≠n m√£**: {target_link}\n"
                   f"üïí **Th·ªùi gian nh·∫≠n mail**: {email_time_str}\n"
                   f"‚è∞ **Hi·ªáu l·ª±c**: {expiration_str}")

        Bot(token=TELEGRAM_TOKEN).send_message(chat_id=CHAT_ID, text=message)

        return jsonify({'message': f'‚úÖ ƒê√£ g·ª≠i th√¥ng b√°o v·ªÅ {name} qua Telegram.\nLink: {target_link}\nHi·ªáu l·ª±c: {expiration_str}'}), 200
    else:
        return jsonify({'message': '‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y link nh·∫≠n m√£ trong email.'}), 200

if __name__ == '__main__':
    app.run(debug=True)
